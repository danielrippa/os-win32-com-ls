// Generated by LiveScript 1.6.0
(function(){
  (function(){
    var buildPath, createShell, type, typedValueAsString, keyAsPath, string, readRegistryValue;
    buildPath = dependency('os.filesystem.Path').buildPath;
    createShell = dependency('os.win32.com.Shell').createShell;
    type = dependency('reflection.Type').type;
    typedValueAsString = dependency('reflection.Value').typedValueAsString;
    keyAsPath = function(key){
      type('< Array String >', key);
      switch (typeof key) {
      case 'string':
        return key;
      default:
        type('[ *:String ]', key);
        return buildPath(key);
      }
    };
    string = function(it){
      return type('< String >', it);
    };
    readRegistryValue = function(key, valueName){
      try {
        return createShell().RegRead(buildPath([keyAsPath(key), string(valueName)]));
      } catch (e$) {}
    };
    return {
      readRegistryValue: readRegistryValue
    };
  })();
}).call(this);
